/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./lib/bit_maximo.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./lib/bit_maximo.js":
/*!***************************!*\
  !*** ./lib/bit_maximo.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("//audio\nconst audio = document.getElementById('audio');\nlet audioActive = false;\n\n//canvas\nconst canvas = document.getElementById('canvas'); \nconst ctx = canvas.getContext('2d');\ncanvas.width = 640; \ncanvas.height = 400; \n\n// background image\nconst img = new Image();\nimg.src = \"./assets/background2.png\";\n\n// colors\nconst colorArray = ['#0095dd', '#dd1a00', '#63dd00']; \nlet currentColor = 0;\nlet randomColor = Math.floor(Math.random() * 3);\nlet color;\nlet randColor;\nlet gameLoop = false;\n\n//character \nlet character = {\n    height: 112,\n    width: 64,\n    x: 175,\n    y: 300,\n    jumping: false,\n    sliding: false,\n    diving: false,\n    y_velocity: 0,\n    color: colorArray[currentColor],\n};\n\n//collision objects\nclass Collection {\n    constructor(amtColor) {\n        this.color = Math.floor(Math.random() * amtColor);\n        this.type =  Math.floor(Math.random() * 3);\n        this.x =  650 //((Math.random() * (100)) + 640);\n        this.counted = false;\n        this.destroy = false; \n        this.drawJumpingObject = this.drawJumpingObject.bind(this)\n        this.drawDivingObject = this.drawDivingObject.bind(this)\n        this.drawSlidingObject = this.drawSlidingObject.bind(this)\n    }\n\n    drawJumpingObject(objX, randColor) {\n        ctx.shadowOffsetX = 5;\n        ctx.shadowOffsetY = 5;\n        ctx.beginPath();\n        ctx.globalAlpha = 0.4;\n        ctx.fillStyle = randColor;\n        ctx.rect(objX, 170, 60, 140)\n        ctx.fill();\n        ctx.closePath();\n        ctx.beginPath();\n        ctx.globalAlpha = 1;\n        ctx.fillStyle = randColor;\n        ctx.rect(objX, 305, 60, 60);\n        ctx.fill();\n        ctx.closePath();\n        ctx.shadowOffsetX = 0;\n        ctx.shadowOffsetY = 0;\n    }\n\n    drawSlidingObject(objX, randColor) {\n        ctx.shadowOffsetX = 5;\n        ctx.shadowOffsetY = 5;\n        ctx.beginPath();\n        ctx.globalAlpha = 0.4;\n        ctx.fillStyle = randColor;\n        ctx.rect(objX, 290, 60, 75);\n        ctx.fill();\n        ctx.closePath();\n        ctx.beginPath();\n        ctx.globalAlpha = 1;\n        ctx.fillStyle = randColor;\n        ctx.rect(objX, 170, 60, 120);\n        ctx.fill();\n        ctx.closePath();\n        ctx.shadowOffsetX = 0;\n        ctx.shadowOffsetY = 0;\n    }\n\n    drawDivingObject (objX, randColor) {\n        ctx.shadowOffsetX = 5;\n        ctx.shadowOffsetY = 5;\n        ctx.beginPath();\n        ctx.globalAlpha = 0.4;\n        ctx.fillStyle = randColor;\n        ctx.rect(objX, 200, 60, 130);\n        ctx.fill();\n        ctx.closePath();\n        ctx.beginPath();\n        ctx.fillStyle = randColor;\n        ctx.globalAlpha = 1;\n        ctx.rect(objX, 325, 60, 40);\n        ctx.fill();\n        ctx.closePath();\n        ctx.beginPath();\n        ctx.globalAlpha = 1;\n        ctx.fillStyle = randColor;\n        ctx.rect(objX, 170, 60, 40);\n        ctx.fill();\n        ctx.closePath();\n        ctx.shadowOffsetX = 0;\n        ctx.shadowOffsetY = 0;\n    }\n\n    //collision detection \n    checkCollision(character) {\n        let obstacleX = this.x; \n\n        if (obstacleX > character.x + character.width || obstacleX < character.x) {\n            return false;\n        } else {\n            if (this.color == currentColor) {\n                if ((character.jumping && this.type == 0) || (character.diving && this.type == 1) || (character.sliding && this.type == 2)) {\n    \n                    return false;\n                }\n            }\n            // debugger\n            return true;\n            \n        }\n    }\n\n    render() {\n        switch (this.type) {\n            case 0:\n                this.drawJumpingObject(this.x, colorArray[this.color]);\n                break; \n            case 1:\n                this.drawDivingObject(this.x, colorArray[this.color]); \n                break;\n            case 2:\n                this.drawSlidingObject(this.x, colorArray[this.color]);\n                break;\n        }\n    }\n    \n}\n\n//character controls\nconst input = {\n     A: false,\n     S: false,\n     D: false,\n     UP: false,\n     DOWN: false,\n     RIGHT: false,\n     M: false,\n     ENTER: false,\n     keyListener: (e) => {\n        // e.preventDefault();\n\n        //  if (!audioActive) {\n        //      audioActive = true;\n        //      audio.play();\n        //  }\n         let key_state = (e.type == 'keydown') ? true : false;\n         const key = e.keyCode; \n         switch(key){\n             case 65: \n             input.A = key_state; \n             break;\n             case 83: \n             input.S = key_state;\n             break;\n             case 68: \n             input.D = key_state;\n             break;\n             case 38: \n             input.UP = key_state;\n             break;\n             case 39: \n             input.RIGHT = key_state;\n             break;\n             case 40: \n             input.DOWN = key_state;\n             break;\n             case 77: \n             input.M = key_state;\n             break;\n             case 13: \n             input.ENTER = key_state;\n             break;\n             default: return false; \n            }\n        }\n    };\n\n//character actions\nconst checkInput = () => {\n    //character jumping\n    if (input.UP && character.jumping == false) {\n        character.y_velocity -= 20; \n        character.jumping = true;\n    } else if (!input.UP && character.jumping == true && character.y == 300) {\n        character.jumping = false;\n    }\n    \n    //character sliding\n    if (input.RIGHT == false) {\n        if (input.DOWN && character.sliding == false) {\n            [character.height, character.width] = [character.width, character.height];\n            character.sliding = true;\n        } else if (!input.DOWN && character.sliding == true) {\n            [character.width, character.height] = [character.height, character.width];\n            character.sliding = false;\n        }\n    }\n    \n    //character diving\n    if (input.DOWN == false) {\n        if (input.RIGHT && character.diving == false) {\n            [character.height, character.width] = [character.width, character.height];\n            character.diving = true;\n        } else if (!input.RIGHT && character.diving == true) {\n            [character.width, character.height] = [character.height, character.width];\n            character.diving = false;\n        }\n    }\n    \n    //color switching \n    if (input.A) {\n        input.A = false;\n        currentColor = 0;\n        // character.color = colorArray[currentColor];\n    } else if (input.S) {\n        input.S = false; \n        currentColor = 1;\n        character.color = colorArray[currentColor];\n    } else if (input.D) {\n        input.D = false; \n        currentColor = 2;\n        character.color = colorArray[currentColor];\n    }\n    \n    //audio \n    if (input.M) {\n        input.M = false; \n        audio.paused ? audio.play() : audio.pause();\n    }\n    \n    //physics behind jumping\n    character.y_velocity += 1.1; \n    character.y += character.y_velocity;\n    \n    if (character.y > 300 - 16 - 32) {\n        character.jumping = false;\n        character.y = 300 - 16 - 32;\n        character.y_velocity = 0;\n        if (character.sliding) {\n            character.y = 300;\n        } else if (character.diving) {\n            character.y = 250;\n        }\n    }\n    \n    \n    window.addEventListener('keydown', input.keyListener);\n    window.addEventListener('keyup', input.keyListener);\n    window.requestAnimationFrame(checkInput);\n}\n\n\ndrawCharacter = (x= character.x, y=character.y, width= character.width, height = character.height, color = colorArray[currentColor]) => {\n    // ctx.clearRect(x, y, width, height);\n    ctx.beginPath();\n    ctx.fillStyle = color;\n    ctx.rect(x, y, width, height);\n    ctx.fill();\n    ctx.strokeStyle = '#ffffff';\n    ctx.stroke();\n    ctx.closePath();  \n}\n\n\ndrawFloor = () => {\n    ctx.beginPath();\n    ctx.strokeStyle = \"#202830\";\n    ctx.lineWidth = 4;\n    ctx.moveTo(0, 365);\n    ctx.lineTo(640, 365);\n    ctx.stroke();\n    ctx.closePath();\n}\n\n\nwindow.onload = function() {\n    \n    let x = 0; \n    const scrollSpeed = 3; \n    const objCollection = [];\n    let obstacleCounter = 0;\n    let score = 0;\n    let colorChange = 1;\n    let lives = 5;\n    let start = false;\n    \n    drawScore = () => {\n        ctx.font = \"bold 18px Helvetica\"; \n        ctx.shadowColor = \"rgba(0,0,0,0.3)\";\n        ctx.shadowOffsetX = 3;\n        ctx.shadowOffsetY = 3;\n        ctx.beginPath();\n        ctx.fillStyle = \"#ffffff\";\n        ctx.fillRect(10, 8, 160, 30);\n        ctx.fill();\n        ctx.closePath();\n        ctx.shadowOffsetX = 0;\n        ctx.shadowOffsetY = 0;\n\n        ctx.fillStyle = \"orange\";\n        ctx.fillText(\"Score: \" + obstacleCounter, 20, 30);\n        window.requestAnimationFrame(drawScore);\n    }\n    \n    drawLives = () => {\n        ctx.shadowColor = \"rgba(0,0,0,0.3)\";\n        ctx.shadowOffsetX = 3;\n        ctx.shadowOffsetY = 3;\n        ctx.beginPath();\n        ctx.fillStyle = \"#ffffff\";\n        ctx.fillRect(canvas.width - 100, 8, 90, 30); \n        ctx.fill();\n        ctx.closePath();\n        ctx.shadowOffsetX = 0;\n        ctx.shadowOffsetY = 0;\n\n        ctx.beginPath();\n        ctx.font = \"bold 18px Helvetica\"; \n        ctx.fillStyle = \"orange\";\n        ctx.fillText(\"LIVES: \" + lives, canvas.width - 90, 30);\n        ctx.closePath();\n        window.requestAnimationFrame(drawLives);\n    }\n    //sets the speed of obstacle creation and scalability of the game\n    \n    function startGame() {\n        setInterval(() => {\n            if (obstacleCounter === 20 || obstacleCounter === 50)  {\n                colorChange++;\n            }\n            objCollection.push(new Collection(colorChange));\n            obstacleCounter++;\n        }, \n        1300\n        );\n        loop();\n    }\n\n    function gameOver() {\n        x = 0;\n        obstacleCounter = 0;\n        score = 0;\n        colorChange = 1;\n        lives = 5;\n        start = false;\n        document.location.reload();\n        clearInterval(interval);\n        \n    }\n\n    function gameInstructions() {\n        // canvas modal\n        ctx.beginPath();\n        ctx.rect(0,0, canvas.width, canvas.height);\n        ctx.fillStyle = \"rgba(0, 0, 0, 0.3 )\";\n        ctx.fill();\n        ctx.closePath();\n        //container\n        ctx.beginPath();\n        ctx.rect(64, 40, 512, 320);\n        ctx.shadowColor = \"rgba(0,0,0,0.3)\";\n        ctx.shadowOffsetX = 5;\n        ctx.shadowOffsetY = 5;\n        ctx.fillStyle = \"#ffffff\";\n        ctx.fill();\n        ctx.closePath();\n        \n        ctx.beginPath();\n        ctx.strokeRect(64, 40, 512, 320);\n        ctx.strokeStyle =\"#0095dd\"; \n        ctx.lineWidth = 10;\n        ctx.stroke();\n        ctx.closePath();\n        //text\n        ctx.shadowOffsetX = 0;\n        ctx.shadowOffsetY = 0;\n        ctx.beginPath();\n        ctx.font = \"bold 24px Helvetica\";\n        ctx.fillStyle = \"#0095dd\";\n        ctx.fillText(\"Welcome to Bit Maximo!\", 170, 100);\n        ctx.font = \"20px Helvetica\";\n        ctx.fillText(\"Match the obstacle with the correct action\", 120, 150);\n        ctx.fillText(\"using up arrow to jump, right arrow to dive,\", 120, 175);\n        ctx.fillText(\"and down arrow to slide. Change the character\", 120, 200);\n        ctx.fillText(\"color with A S D to match the obstacle color.\", 120, 225);\n        ctx.font = \"bold 24px Helvetica\";\n        ctx.fillText(\"press Enter\", 240, 300);\n        ctx.closePath();\n        \n        if (!gameLoop) {\n            window.requestAnimationFrame(gameInstructions);\n        }\n    }\n\n    function background() {\n        // ctx.clearRect(0,0, canvas.width, canvas.height);\n        ctx.drawImage(img, x , 0); \n        ctx.drawImage(img, x + canvas.width + 4, 0);  \n        x -= scrollSpeed; \n    \n        if (x <= -canvas.width) x = 0;\n        window.requestAnimationFrame(background);\n    }\n\n    function loop() {\n        drawFloor();\n        drawCharacter();\n        //draws the obstacles from the class Collection\n        for (let i = 0; i < objCollection.length; i++) {\n            obstacle = objCollection[i];\n            obstacle.render(); \n            obstacle.x -= 5; \n            \n            if (obstacle.checkCollision(character) && obstacle.counted == false) {\n                console.log(`${obstacleCounter} collided`)\n                ctx.clearRect(character.x, character.y, character.width, character.height);\n                setTimeout(() => clearInterval(characterCollided), 500);\n                const characterCollided = setInterval(() => {\n                }, 400);\n                    console.log(lives);\n                    // obstacleCounter--;\n                    lives--;\n                    obstacle.counted = true;\n            } else {\n                score++;\n            }\n\n            if (lives == -1) {\n                gameOver();\n                gameLoop = false;\n            }\n\n            if (obstacle.x <= -canvas.width - 100) {\n                obstacle.destroy = true; \n            }\n        }\n        //removes object from array to clean collision detection later\n        for (let i = 0; i < objCollection.length; i++) {\n            obstacle = objCollection[i];\n            if (obstacle.destroy === true) {\n                objCollection.splice(i, 1);\n                i--;\n            }\n        }\n        window.requestAnimationFrame(loop);\n    }\n    background();\n    drawScore();\n    drawLives();\n    gameInstructions();\n\n    window.addEventListener('keydown', (e) =>{\n        if (e.keyCode === 13 && start == false) {\n            gameLoop = true;\n            start = true;\n            startGame();\n        }\n    })\n    checkInput();\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/bit_maximo.js\n");

/***/ })

/******/ });